{"version":3,"sources":["components/common/Loading.tsx","components/common/Spinner.tsx","components/todo/TodoService.tsx","components/todo/template/TodoTemplate.tsx","components/todo/template/head/TodoHead.tsx","components/todo/template/list/item/TodoItem.tsx","components/todo/template/list/TodoList.tsx","components/common/DatePicker.tsx","components/common/Modal.tsx","components/todo/template/create/TodoCreate.tsx","components/todo/template/footer/TodoFooter.tsx","components/todo/TodoContainer.tsx","App.tsx","index.js"],"names":["Loading","props","LoadingOutlined","style","fontSize","size","spin","StyledSpinnerWrapper","styled","Row","styleProps","Spinner","tip","delay","mask","className","justify","align","data-mask","indicator","defaultProps","initialTodos","TodoTemplateBlock","div","TodoTemplate","children","React","memo","TodoHeadBlock","DateText","DayText","WEEK","MONTH","TodoHead","useState","day","setDay","timer","setTimer","getTimer","date","Date","getDay","months","getMonth","dates","String","getDate","padStart","years","getFullYear","hours","getHours","mins","getMinutes","useEffect","setInterval","Remove","TodoItemBlock","CheckCircle","done","css","Text","TodoItem","toggleTodo","removeTodo","todo","setDone","onClick","id","CheckOutlined","text","deadline","DeleteOutlined","TodoListBlock","TodoList","todos","map","DatePickerContainer","handleChangeDeadline","direction","width","height","onChange","ModalContainer","isModal","setIsModal","title","visible","onOk","onCancel","CircleButton","button","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","nextId","createTodo","incrementNextId","open","setOpen","value","setValue","setDeadline","Modal","onSubmit","e","preventDefault","prev","autoFocus","placeholder","target","DatePicker","_","dateString","result","split","splice","join","PlusCircleOutlined","TodoFooterBlock","LeftText","Todofooter","undoneTasks","filter","length","TodoContainer","todoState","setTodoState","nextIdState","loadData","saveData","data","localStorage","getItem","undefined","JSON","parse","setItem","stringify","prevState","concat","useTodo","TodoFooter","App","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68d4216b.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { SpinSize } from 'antd/lib/spin';\n\ninterface ILoadingProps {\n\tsize?: SpinSize;\n\tstyle?: React.CSSProperties;\n}\n\nexport default function Loading(props: ILoadingProps): ReactElement {\n\treturn <LoadingOutlined style={{ fontSize: props.size === 'large' ? 48 : 24, ...props.style }} spin />;\n}\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { Spin, Row, Col } from 'antd';\nimport { SpinSize } from 'antd/lib/spin';\n\nimport Loading from './Loading';\n\ninterface ISpinnerProps {\n\ttip?: string;\n\tsize?: SpinSize;\n\tdelay?: number;\n\tstyle?: React.CSSProperties;\n\tmask?: boolean;\n}\n\ninterface IWrapperProp {\n\treadonly ['data-mask']: boolean;\n}\n\nconst StyledSpinnerWrapper = styled(Row)<IWrapperProp>`\n\tbackground-color: ${styleProps => (styleProps['data-mask'] ? 'rgba(0, 0, 0, 0.1)' : 'transparent')};\n`;\n\nfunction Spinner(props: ISpinnerProps): ReactElement {\n\tconst { tip, size, delay, style, mask = false } = props;\n\n\treturn (\n\t\t<StyledSpinnerWrapper className=\"spinner-wrap\" justify=\"center\" align=\"middle\" style={style} data-mask={mask}>\n\t\t\t<Col>\n\t\t\t\t<Spin indicator={<Loading size={size} />} delay={delay} tip={tip} size={size} />\n\t\t\t</Col>\n\t\t</StyledSpinnerWrapper>\n\t);\n}\n\nSpinner.defaultProps = {\n\ttip: '로딩중입니다.',\n\tsize: 'large',\n\tdelay: 0,\n\tstyle: {},\n\tmask: false,\n};\n\nexport default Spinner;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\n\nexport type Itodo = {\n  id: number;\n  text: string;\n  done: boolean;\n  deadline: string;\n};\n\nlet initialTodos: Itodo[] = [];\n\nexport const useTodo = () => {\n  const [todoState, setTodoState] = useState(initialTodos);\n  var nextIdState = 0;\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    saveData();\n  }, [todoState]);\n\n  const incrementNextId = () => {\n    nextIdState = nextIdState + 1;\n  };\n\n  const toggleTodo = (id: number) => {\n    setTodoState((prevState) =>\n      prevState.map((todo: Itodo) => todo.id === id ? {\n        ...todo,\n        done: !todo.done,\n      }\n      : { ...todo }\n    ))\n  };\n\n  const removeTodo = (id: number) => {\n    setTodoState((prevState) =>\n      prevState.filter((todo: Itodo) => todo.id !== id)\n    );\n  };\n\n  const createTodo = (todo: Itodo) => {\n    const nextId = todoState?.length + 1;\n    setTodoState((prevState) =>\n      prevState?.concat({\n        ...todo,\n        id: nextId\n      })\n    );\n  };\n\n  const loadData = () => {\n    let data = localStorage.getItem(\"todos\");\n    if (data === undefined) data = \"\";\n    initialTodos = JSON.parse(data!);\n    if (initialTodos && initialTodos.length >= 1) {\n      incrementNextId();\n    }\n    setTodoState(initialTodos);\n  };\n\n  const saveData = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todoState));\n  };\n\n  return {\n    todoState,\n    nextIdState,\n    incrementNextId,\n    toggleTodo,\n    removeTodo,\n    createTodo\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplateBlock = styled.div`\n  width: 70%;\n  height: 800px;\n\n  min-width: 360px;\n  max-width: 700px;\n\n  position: relative;\n  background: white;\n  border-radius: 30px;\n  box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.1);\n\n  margin: 0 auto;\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate(props: any) {\n  return <TodoTemplateBlock>{props.children}</TodoTemplateBlock>;\n}\n\nexport default React.memo(TodoTemplate);\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoHeadBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 52px;\n  padding-bottom: 24px;\n  border-bottom: 3px solid #33bb77;\n`;\n\nconst DateText = styled.div`\n  font-size: 26px;\n  color: #119955;\n  padding-left: 10px;\n`;\n\nconst DayText = styled.div`\n  font-size: 22px;\n  color: #119955;\n  padding-top: 5px;\n`;\n\nconst WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\nconst MONTH = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst getDate = () => {\n  const date = new Date();\n  const day = WEEK[date.getDay()];\n  const months = MONTH[date.getMonth()];\n  const dates = String(date.getDate()).padStart(2, '0');\n  const years = date.getFullYear();\n  const hours = String(date.getHours()).padStart(2, '0');\n  const mins = String(date.getMinutes()).padStart(2, '0');\n  return { day, months, dates, years, hours, mins };\n};\n\nconst TodoHead = () => {\n  //@TODO 현재 시간을 표시해야합니다.\n  const [day, setDay] = useState('');\n  const [timer, setTimer] = useState('');\n  const getTimer = () => {\n    const { dates, day, hours, mins, months, years } = getDate();\n    setDay(day);\n    setTimer(`${months} ${dates}, ${years} ${hours}:${mins}`);\n  }\n\n  useEffect(() => {\n    getTimer();\n    setInterval(() => {\n      getTimer();\n    }, 1000)\n  }, [])\n\n  return (\n    <TodoHeadBlock>\n      <DayText>{day}</DayText>\n      <DateText>{timer}</DateText>\n    </TodoHeadBlock>\n  );\n};\n\nexport default React.memo(TodoHead);\n","import { CheckOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { Itodo } from \"../../../TodoService\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #119955;\n  font-size: 16px;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div<{ done: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 16px;\n  border: 1px solid #33bb77;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #dddddd;\n      color: #dddddd;\n    `}\n`;\n\nconst Text = styled.div<{ done: boolean }>`\n  flex: 1;\n  font-size: 16px;\n  color: #119955;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n      text-decoration: line-through;\n    `}\n`;\n\ninterface TodoItemProps {\n  toggleTodo: (id: number) => void;\n  removeTodo: (id: number) => void;\n  todo: Itodo;\n}\n\nconst TodoItem = ({ toggleTodo, removeTodo, todo }: TodoItemProps) => {\n  const [done, setDone] = useState(false);\n  const handleToggle = () => {\n    toggleTodo(todo.id);\n    setDone(!done);\n  };\n\n  const handleRemove = () => {\n    removeTodo(todo.id);\n  };\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={handleToggle}>\n        {done && <CheckOutlined />}\n      </CheckCircle>\n      <Text done={done}>{todo.text}</Text>\n      <Text done={done}>{todo.deadline && `기한: ${todo.deadline}`}</Text>\n      <Remove onClick={handleRemove}>\n        <DeleteOutlined />\n      </Remove>\n    </TodoItemBlock>\n  );\n};\n\nexport default React.memo(TodoItem);\n","import { Itodo } from \"../../TodoService\"\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport TodoItem from \"./item/TodoItem\";\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\ninterface TodoListProps {\n  todos: Itodo[];\n  toggleTodo: (id: number) => void;\n  removeTodo: (id: number) => void;\n}\n\nconst TodoList = ({ toggleTodo, removeTodo, todos }: TodoListProps) => {\n  return (\n    <TodoListBlock>\n      {todos &&\n        todos.map((todo) => (\n          <TodoItem\n            toggleTodo={toggleTodo}\n            removeTodo={removeTodo}\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n    </TodoListBlock>\n  );\n};\n\nexport default React.memo(TodoList);\n","import { DatePicker, Space } from 'antd';\n\nconst DatePickerContainer = ({ handleChangeDeadline }) => {\n  return (\n    <Space direction=\"vertical\">\n      <DatePicker style={{width: 130, height: 60}} onChange={handleChangeDeadline} />\n    </Space>\n  )\n}\n\nexport default DatePickerContainer;\n","import { Modal } from 'antd';\n\nconst ModalContainer = ({ isModal, setIsModal }) => {\n  const handleOk = () => {\n    setIsModal(false);\n  };\n\n  const handleCancel = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <>\n      <Modal title=\"입력 오류\" visible={isModal} onOk={handleOk} onCancel={handleCancel}>\n        <p>빈칸을 채워주세요.</p>\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalContainer;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { Itodo } from \"../../TodoService\"\nimport DatePickerContainer from \"../../../common/DatePicker\";\nimport ModalContainer from \"../../../common/Modal\";\n\nconst CircleButton = styled.button<{ open: boolean }>`\n  background: #33bb77;\n  width: 50px;\n  height: 50px;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  left: 50%;\n  transform: translate(50%, 0%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #eeeeee;\n`;\n\nconst InsertForm = styled.form`\n  display: flex;\n  background: #eeeeee;\n  padding-left: 40px;\n  padding-top: 36px;\n  padding-right: 60px;\n  padding-bottom: 36px;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border: 1px solid #dddddd;\n  width: 100%;\n  outline: none;\n  font-size: 21px;\n  box-sizing: border-box;\n  color: #119955;\n  &::placeholder {\n    color: #dddddd;\n    font-size: 16px;\n  }\n`;\n\ninterface TodoCreateProps {\n  nextId: number;\n  createTodo: (todo: Itodo) => void;\n  incrementNextId: () => void;\n}\n\nconst TodoCreate = ({\n  nextId,\n  createTodo,\n  incrementNextId\n}: TodoCreateProps) => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [isModal, setIsModal] = useState(false);\n\n  const handleToggle = () => setOpen(!open);\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }\n  const handleChangeDeadline = (_: any, dateString: string) => {\n    const result = dateString.split('-').splice(1, 2).join(\".\");\n    setDeadline(result);\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault(); // 새로고침 방지\n    // if (e.target === \"\") {\n    //   setIsModal(prev => !prev)\n    //   return;\n    // }\n    if (value === \"\") {\n      setIsModal(prev => !prev);\n      return;\n    }\n\n    createTodo({\n      id: nextId,\n      text: value,\n      done: false,\n      deadline,\n    });\n    incrementNextId(); // nextId 하나 증가\n\n    setValue(\"\"); // input 초기화\n    setDeadline(\"\");\n    setOpen(false); // open 닫기\n  };\n\n  return (\n    <>\n      {isModal && <ModalContainer isModal={isModal} setIsModal={setIsModal} />}\n      <InsertFormPositioner>\n        <InsertForm onSubmit={handleSubmit}>\n          <Input\n            autoFocus\n            placeholder=\"What's need to be done?\"\n            onChange={handleChange}\n            value={value}\n          />\n          <DatePickerContainer handleChangeDeadline={handleChangeDeadline} />\n          <CircleButton onClick={handleToggle} open={open}>\n            <PlusCircleOutlined />\n          </CircleButton>\n        </InsertForm>\n      </InsertFormPositioner>\n    </>\n  );\n};\n\nexport default React.memo(TodoCreate);\n","import { Itodo } from \"../../TodoService\"\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoFooterBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nconst LeftText = styled.div`\n  color: #33bb77;\n  font-size: 18px;\n`;\n\ninterface HooksTodoHeadProps {\n  todos: Itodo[];\n}\n\nconst Todofooter = ({ todos }: HooksTodoHeadProps) => {\n  const undoneTasks = todos?.filter((todo) => !todo.done);\n  return (\n    <TodoFooterBlock>\n      <LeftText className=\"tasks-left\">\n        {undoneTasks?.length} items left\n      </LeftText>\n    </TodoFooterBlock>\n  );\n};\n\nexport default React.memo(Todofooter);\n","import { useTodo } from \"./TodoService\";\nimport TodoTemplate from \"./template/TodoTemplate\";\nimport TodoHead from \"./template/head/TodoHead\";\nimport TodoList from \"./template/list/TodoList\";\nimport TodoCreate from \"./template/create/TodoCreate\";\nimport TodoFooter from \"./template/footer/TodoFooter\";\n\nconst TodoContainer = () => {\n  const {\n    todoState,\n    nextIdState,\n    incrementNextId,\n    toggleTodo,\n    removeTodo,\n    createTodo,\n  } = useTodo();\n  \n  return (\n    <>\n      <TodoTemplate>\n        <TodoHead />\n        <TodoCreate\n          nextId={nextIdState}\n          createTodo={createTodo}\n          incrementNextId={incrementNextId}\n        />\n        <TodoList\n          toggleTodo={toggleTodo}\n          removeTodo={removeTodo}\n          todos={todoState}\n        />\n        <TodoFooter todos={todoState} />\n      </TodoTemplate>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","import \"antd/dist/antd.css\";\nimport Spinner from \"./components/common/Spinner\";\nimport TodoContainer from \"./components/todo/TodoContainer\";\n\nfunction App() {\n  //@TODO login\n  let isLogged = true;\n\n  const RenderLayout = (\n    <div>\n      <TodoContainer />\n    </div>\n  );\n\n  return isLogged ? RenderLayout : <Spinner mask />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./App\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #eeeeee;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}